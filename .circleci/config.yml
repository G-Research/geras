version: 2
jobs:
  build:
    docker:
      - image: circleci/golang:1.12.5
    working_directory: /go/src/github.com/G-Research/geras
    environment:
      GO111MODULE: 'on'
      GOBIN: "/go/bin"
    steps:
      - checkout
      - restore_cache:
          keys:
            - pkg-cache
      - run:
          name: Build using vendor directory
          command: go build -mod=vendor ./cmd/geras
      - run:
          name: Build using go modules 
          command: go build ./...
      - run:
          name: Run unit tests 
          command: go test ./pkg/... 
      - run:
          name: Check flags are documented
          command: test/flags-doc.sh

      # Create a docker environment we can use to build docker images
      # See https://circleci.com/docs/2.0/building-docker-images/
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Docker build
          command: docker build -t g-research/geras:$CIRCLE_BRANCH --build-arg GIT_REVISION="$CIRCLE_SHA1" --build-arg GIT_BRANCH="$CIRCLE_BRANCH" .

      - run:
          name: Docker run without flags
          command: |
            set +e
            docker run -t g-research/geras:$CIRCLE_BRANCH
            exit=$?
            # No flags; so expect help output. Also puts the version output into the CircleCI log
            if [[ $exit != 1 ]]; then
              echo "Unexpected exit code: $exit"
              exit 1
            fi
            exit 0

      - save_cache: 
          key: pkg-cache
          paths:
            - "/go/pkg"
